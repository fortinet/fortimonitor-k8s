apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Chart.Name }}-onsight
  labels:
    app: {{ .Chart.Name }}-onsight
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.onsightVolume.size }}
  {{- if .Values.onsightStorageClass.enabled }}
  storageClassName: {{ .Chart.Name }}-onsight
  {{- else if .Values.onsightVolume.storageClassName }}
  storageClassName: {{ .Values.onsightVolume.storageClassName }}
  {{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-onsight
  labels:
    app: {{ .Chart.Name }}-onsight
    app.kubernetes.io/name: {{ include "fortimonitor.name" . }}
    helm.sh/chart: {{ include "fortimonitor.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: "{{ .Chart.Name }}-onsight"
  selector:
     matchLabels:
        app: {{ .Chart.Name }}-onsight
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-onsight
        version: {{ .Chart.Version }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      tolerations:
        {{- toYaml $.Values.podTolerations.onsight | nindent 8 }}
{{- if .Values.onsightSecurityContext.pod }}
      securityContext:
{{ toYaml .Values.onsightSecurityContext.pod | indent 8 }}
{{- end }}
      initContainers:
      - image: "{{ .Values.onsightImage.repository }}:{{ .Values.onsightImage.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.onsightImage.pullPolicy }}
        name: "init-onsight"
{{- if .Values.onsightSecurityContext.container }}
        securityContext:
{{ toYaml .Values.onsightSecurityContext.container | indent 10 }}
{{- end }}
        volumeMounts:
        - name: {{ .Chart.Name }}-onsight-pv
          mountPath: /persistent/
        command: ['sudo', '/usr/bin/bash', '-c', "source /root/k8s_integration.sh && init_k8s_appliancedb"]
      containers:
      - image: "{{ .Values.onsightImage.repository }}:{{ .Values.onsightImage.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.onsightImage.pullPolicy }}
        name: {{ .Chart.Name }}-onsight
{{- if .Values.onsightSecurityContext.container }}
        securityContext:
{{ toYaml .Values.onsightSecurityContext.container | indent 10 }}
{{- end }}
        volumeMounts:
        - name: {{ .Chart.Name }}-onsight-pv
          mountPath: /persistent/
        - name: {{ .Chart.Name }}-onsight-pv
          subPath: mysql
          mountPath: /var/lib/mysql
        - name: {{ .Chart.Name }}-secret
          mountPath: "/etc/fm-k8s"
        envFrom:
        - configMapRef:
            name: {{ .Chart.Name }}
        resources:
          {{- $size := .Values.size }}
          requests:
            {{- if .Values.onsightRequests.cpu }}
            cpu: "{{ .Values.onsightRequests.cpu }}"
            {{- else if eq $size "small" }}
            cpu: "1.0"
            {{- else if eq $size "medium" }}
            cpu: "2.0"
            {{- else if eq $size "large" }}
            cpu: "3.0"
            {{- end }}
            {{- if .Values.onsightRequests.memory }}
            memory: "{{ .Values.onsightRequests.memory }}"
            {{- else if eq $size "small" }}
            memory: "1Gi"
            {{- else if eq $size "medium" }}
            memory: "2Gi"
            {{- else if eq $size "large" }}
            memory: "3Gi"
            {{- end }}
            {{- if .Values.onsightRequests.ephemeral }}
            ephemeral-storage: "{{ .Values.onsightRequests.ephemeral }}"
            {{- else if eq $size "small" }}
            ephemeral-storage: "10Gi"
            {{- else if eq $size "medium" }}
            ephemeral-storage: "20Gi"
            {{- else if eq $size "large" }}
            ephemeral-storage: "50Gi"
            {{- end }}
          limits:
            {{- if .Values.onsightRequests.ephemeral }}
            ephemeral-storage: "{{ .Values.onsightRequests.ephemeral }}"
            {{- else if eq $size "small" }}
            ephemeral-storage: "10Gi"
            {{- else if eq $size "medium" }}
            ephemeral-storage: "20Gi"
            {{- else if eq $size "large" }}
            ephemeral-storage: "50Gi"
            {{- end }}
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - '. /root/k8s_integration.sh && d=$(time_since_sync) && [ "$d" -le "600" ]'
          initialDelaySeconds: 600
          failureThreshold: 2
          periodSeconds: 30
      volumes:
      - name: {{ .Chart.Name }}-onsight-pv
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-onsight
      - name: {{ .Chart.Name }}-secret
        secret:
          secretName: {{ .Chart.Name }}
      hostAliases:
        - hostnames:
            - "onsight-collector"
            - "onsight-collector.onsight"
          ip: "127.0.0.1"
      serviceAccountName: {{ .Chart.Name }}
      {{- with .Values.onsightNodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
